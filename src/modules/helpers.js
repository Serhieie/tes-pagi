import { observer } from './observer.js';
import COMMONS from '../modules/commons.js';
import Notiflix from 'notiflix';

function noPhotoMsg() {
  hideLoader();
  Notiflix.Notify.failure(
    `–ù–µ–º–∞—î —Ñ–æ—Ç–æ –ø–æ –¥–∞–Ω–æ–º—É –∑–∞–ø–∏—Ç—É. –°–ø—Ä–æ–±—É–π—Ç–µ –∑–Ω–∞–π—Ç–∏ —â–æ—Å—å —ñ–Ω—à–µ. `
  );
  const erorItem = `<div style=" margin: 0 auto; margin-top: 75px; width: 1200px;"> <img src="https://static.thenounproject.com/png/1269202-200.png"
   style=" margin: 0 auto; display: flex;" alt="placeholder" width="400"/></div>`;
  return COMMONS.container.insertAdjacentHTML('beforeend', erorItem);
}

function lastPhotos() {
  hideLoader();
  Notiflix.Notify.success(`–¶–µ –æ—Å—Ç–∞–Ω–Ω—ñ —Ñ–æ—Ç–æ –∑–∞ —Ü–∏–º –ø–æ—à—É–∫–æ–º!`);
}

function onError(error) {
  if (error.response.data === '[ERROR 400] "page" is out of valid range.') {
    noPhotoMsg();
    return observer.unobserve(COMMONS.guard);
  }
  hideLoader();
  Notiflix.Notify.failure(`–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–µ–º–æ–∂–ª–∏–≤–∞, ${error} ü§∑‚Äç‚ôÇÔ∏è`);
  return observer.unobserve(COMMONS.guard);
}

function emptyResponse() {
  noPhotoMsg();
  return observer.unobserve(COMMONS.guard);
}
function successResponse(response) {
  Notiflix.Notify.success(
    `–ó–∞–≥—Ä—É–∑–∫–∞ —É—Å–ø—ñ—à–Ω–∞!–í—Å—å–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–ª–æ—Å—è ${
      response.data.hits.length * COMMONS.currentPage
    } —Ñ–æ—Ç–æ`
  );
}

function isSearchQueryValid() {
  const searchQuery = COMMONS.form.elements['searchQuery'].value;
  if (!searchQuery) {
    Notiflix.Notify.failure(`–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–µ–º–æ–∂–ª–∏–≤–∞, –≤–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç`);
    resetPageAndContainer();
    const erorItem = `<img src="https://static.thenounproject.com/png/1269202-200.png"
  style=" margin: 0     auto; margin-top: 75px;" alt="placeholder" width="400"/>`;
    COMMONS.container.insertAdjacentHTML('beforeend', erorItem);
    return false;
  }
  return true;
}

function resetPageAndContainer() {
  COMMONS.currentPage = 0;
  COMMONS.container.innerHTML = '';
}

function showLoader() {
  COMMONS.loader.classList.remove('visually-hidden');
}
function hideLoader() {
  COMMONS.loader.classList.add('visually-hidden');
}

export default {
  onError,
  successResponse,
  emptyResponse,
  isSearchQueryValid,
  resetPageAndContainer,
  lastPhotos,
  showLoader,
  hideLoader,
};
